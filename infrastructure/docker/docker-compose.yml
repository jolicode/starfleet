version: '3.7'

volumes:
    postgres-data: {}

services:
    router:
        build: services/router
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
        network_mode: host

    frontend:
        build: services/frontend
        depends_on:
            - postgres
        volumes:
            - "../../${PROJECT_DIRECTORY}:/home/app/application:cached"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}-frontend.rule=Host(${PROJECT_DOMAINS})"
            - "traefik.http.routers.${PROJECT_NAME}-frontend.tls=true"
            - "traefik.http.routers.${PROJECT_NAME}-frontend-unsecure.rule=Host(${PROJECT_DOMAINS})"
            # Comment the next line to be able to access frontend via HTTP instead of HTTPS
            - "traefik.http.routers.${PROJECT_NAME}-frontend-unsecure.middlewares=redirect-to-https@file"

    postgres:
        build: services/postgres
        environment:
            - POSTGRES_USER=starfleet
            - POSTGRES_PASSWORD=starfleet
            - POSTGRES_DB=starfleet
        ports:
            - 5432:5432
        volumes:
            - postgres-data:/var/lib/postgresql/data

    blackfire:
        image: blackfire/blackfire
        ports: ["8707"]
        environment:
            # Exposes BLACKFIRE_* environment variables from the host or create an override file 
            BLACKFIRE_SERVER_ID: ~
            BLACKFIRE_SERVER_TOKEN: ~
            BLACKFIRE_CLIENT_ID: ~
            BLACKFIRE_CLIENT_TOKEN: ~
